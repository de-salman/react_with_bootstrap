[{"D:\\Document\\Study\\full stack\\confusion\\src\\index.js":"1","D:\\Document\\Study\\full stack\\confusion\\src\\reportWebVitals.js":"2","D:\\Document\\Study\\full stack\\confusion\\src\\App.js":"3","D:\\Document\\Study\\full stack\\confusion\\src\\components\\MenuComponent.js":"4","D:\\Document\\Study\\full stack\\confusion\\src\\shared\\dishes.js":"5","D:\\Document\\Study\\full stack\\confusion\\src\\components\\DishdetailComponent.js":"6","D:\\Document\\Study\\full stack\\confusion\\src\\components\\MainComponent.js":"7","D:\\Document\\Study\\full stack\\confusion\\src\\components\\HeaderComponent.js":"8","D:\\Document\\Study\\full stack\\confusion\\src\\components\\FooterComponent.js":"9","D:\\Document\\Study\\full stack\\confusion\\src\\components\\HomeComponent.js":"10","D:\\Document\\Study\\full stack\\confusion\\src\\components\\ContactComponent.js":"11","D:\\Document\\Study\\full stack\\confusion\\src\\shared\\comments.js":"12","D:\\Document\\Study\\full stack\\confusion\\src\\shared\\promotions.js":"13","D:\\Document\\Study\\full stack\\confusion\\src\\shared\\leaders.js":"14","D:\\Document\\Study\\full stack\\confusion\\src\\components\\AboutUsComponent.js":"15","D:\\Document\\Study\\full stack\\confusion\\src\\redux\\configureStore.js":"16","D:\\Document\\Study\\full stack\\confusion\\src\\redux\\comments.js":"17","D:\\Document\\Study\\full stack\\confusion\\src\\redux\\dishes.js":"18","D:\\Document\\Study\\full stack\\confusion\\src\\redux\\promotions.js":"19","D:\\Document\\Study\\full stack\\confusion\\src\\redux\\leaders.js":"20","D:\\Document\\Study\\full stack\\confusion\\src\\redux\\ActionCreators.js":"21","D:\\Document\\Study\\full stack\\confusion\\src\\redux\\ActionTypes.js":"22","D:\\Document\\Study\\full stack\\confusion\\src\\components\\LoadingComponent.js":"23","D:\\Document\\Study\\full stack\\confusion\\src\\redux\\forms.js":"24"},{"size":635,"mtime":1612336239941,"results":"25","hashOfConfig":"26"},{"size":362,"mtime":499162500000,"results":"27","hashOfConfig":"26"},{"size":533,"mtime":1613324207011,"results":"28","hashOfConfig":"26"},{"size":2068,"mtime":1613754913063,"results":"29","hashOfConfig":"26"},{"size":1490,"mtime":1612360566698,"results":"30","hashOfConfig":"26"},{"size":7671,"mtime":1613754913317,"results":"31","hashOfConfig":"26"},{"size":2706,"mtime":1613837017777,"results":"32","hashOfConfig":"26"},{"size":5106,"mtime":1613143323675,"results":"33","hashOfConfig":"26"},{"size":2809,"mtime":1612355192478,"results":"34","hashOfConfig":"26"},{"size":1525,"mtime":1613754913063,"results":"35","hashOfConfig":"26"},{"size":10921,"mtime":1613837017240,"results":"36","hashOfConfig":"26"},{"size":4279,"mtime":1612360657005,"results":"37","hashOfConfig":"26"},{"size":445,"mtime":1612360590242,"results":"38","hashOfConfig":"26"},{"size":2382,"mtime":1612360611294,"results":"39","hashOfConfig":"26"},{"size":4259,"mtime":1612925870179,"results":"40","hashOfConfig":"26"},{"size":793,"mtime":1613837246154,"results":"41","hashOfConfig":"26"},{"size":505,"mtime":1613647208016,"results":"42","hashOfConfig":"26"},{"size":598,"mtime":1613754913062,"results":"43","hashOfConfig":"26"},{"size":195,"mtime":1613576641181,"results":"44","hashOfConfig":"26"},{"size":183,"mtime":1613576639419,"results":"45","hashOfConfig":"26"},{"size":793,"mtime":1613754913062,"results":"46","hashOfConfig":"26"},{"size":178,"mtime":1613754913063,"results":"47","hashOfConfig":"26"},{"size":256,"mtime":1613754913062,"results":"48","hashOfConfig":"26"},{"size":170,"mtime":1613837017241,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"fksdwl",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"52"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"52"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Document\\Study\\full stack\\confusion\\src\\index.js",[],["102","103"],"D:\\Document\\Study\\full stack\\confusion\\src\\reportWebVitals.js",[],"D:\\Document\\Study\\full stack\\confusion\\src\\App.js",[],"D:\\Document\\Study\\full stack\\confusion\\src\\components\\MenuComponent.js",[],"D:\\Document\\Study\\full stack\\confusion\\src\\shared\\dishes.js",[],"D:\\Document\\Study\\full stack\\confusion\\src\\components\\DishdetailComponent.js",["104","105","106"],"import React, { Component } from 'react'\r\nimport {\r\n    Card, CardImg, CardText, CardBody, Modal, ModalHeader, ModalBody,\r\n    CardTitle, Breadcrumb, BreadcrumbItem, Button, Row, Col, Label\r\n} from 'reactstrap';\r\nimport { Loading } from './LoadingComponent';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, LocalForm, Errors } from 'react-redux-form';\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\n\r\nfunction RenderDish({ dish }) {\r\n    console.log('dish', dish)\r\n    if (dish != null)\r\n        return (\r\n            <Card>\r\n                <CardImg top src={dish.image} alt={dish.name} />\r\n                <CardBody>\r\n                    <CardTitle>{dish.name}</CardTitle>\r\n                    <CardText>{dish.description}</CardText>\r\n                </CardBody>\r\n            </Card>\r\n        );\r\n    else\r\n        return (\r\n            <div></div>\r\n        );\r\n}\r\nfunction RenderComments({ comments, addComment, dishId }) {\r\n    if (comments != null) {\r\n        let commentList = comments.map((comment) => {\r\n            return (\r\n                <div key={comment.id}>\r\n                    <ul className=\"list-unstyled\">\r\n                        <li>{comment.comment}</li>\r\n                        <li>-- {comment.author}, {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit' }).format(new Date(Date.parse(comment.date)))}</li>\r\n                    </ul>\r\n                </div>\r\n            )\r\n        })\r\n        return (\r\n            <React.Fragment>\r\n                <h3>Comments</h3>\r\n                {commentList}\r\n                <CommentForm dishId={dishId} addComment={addComment} />\r\n            </React.Fragment>\r\n        );\r\n    }\r\n    else\r\n        return (\r\n            <div></div>\r\n        );\r\n}\r\n\r\nconst DishDetail = (props) => {\r\n    console.log('called')\r\n    if (props.isLoading) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (props.errMess) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <h4>{props.errMess}</h4>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (props.dish != null)\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n\r\n                        <BreadcrumbItem><Link to=\"/menu\">Menu</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>{props.dish.name}</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 col-md-5 m-1\">\r\n                        <RenderDish dish={props.dish} />\r\n                    </div>\r\n                    <div className=\"col-12 col-md-5 m-1\">\r\n                        <RenderComments comments={props.comments}\r\n                            addComment={props.addComment}\r\n                            dishId={props.dish.id}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    else\r\n        return (\r\n            <div></div>\r\n        );\r\n}\r\n\r\n\r\nexport default DishDetail;\r\n\r\nclass CommentForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isModalOpen: false\r\n        };\r\n\r\n    }\r\n    toggleModal = () => {\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n    handleSubmit(values) {\r\n        console.log(values)\r\n        this.toggleModal();\r\n        this.props.addComment(this.props.dishId, values.rating, values.author, values.Comment);\r\n    }\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Button outline onClick={this.toggleModal}><span className=\"fa fa-pencil fa-lg\"></span> Submit Comment</Button>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\r\n                    <ModalBody>\r\n                        <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"rating\" md={2}>Rating</Label>\r\n                                <Col md={10}>\r\n                                    <Control.select model=\".rating\" name=\"Rating\"\r\n                                        className=\"form-control\">\r\n                                        <option>1</option>\r\n                                        <option>2</option>\r\n                                        <option>3</option>\r\n                                        <option>4</option>\r\n                                        <option>5</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"author\" md={2}>Your Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".author\" id=\"author\" name=\"author\"\r\n                                        placeholder=\"Your Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".author\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"Comment\" md={2}>Comment</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".Comment\" id=\"Comment\" name=\"Comment\"\r\n                                        rows=\"6\"\r\n                                        className=\"form-control\" />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{ size: 1, offset: 2 }}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                        Submit\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </LocalForm>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}","D:\\Document\\Study\\full stack\\confusion\\src\\components\\MainComponent.js",[],"D:\\Document\\Study\\full stack\\confusion\\src\\components\\HeaderComponent.js",[],"D:\\Document\\Study\\full stack\\confusion\\src\\components\\FooterComponent.js",[],"D:\\Document\\Study\\full stack\\confusion\\src\\components\\HomeComponent.js",[],"D:\\Document\\Study\\full stack\\confusion\\src\\components\\ContactComponent.js",["107","108","109","110","111","112","113","114"],"import React, { Component } from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Button, Row, Col, Label } from 'reactstrap';\r\nimport { Control, Form, Errors, actions } from 'react-redux-form';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\nclass Contact extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n\r\n    }\r\n\r\n\r\n    handleSubmit(values) {\r\n        console.log('Current State is: ' + JSON.stringify(values));\r\n        alert('Current State is: ' + JSON.stringify(values));\r\n        this.props.resetFeedbackForm();\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Contact Us</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Location Information</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                        <h5>Our Address</h5>\r\n                        <address>\r\n                            121, Clear Water Bay Road<br />\r\n                        Clear Water Bay, Kowloon<br />\r\n                        HONG KONG<br />\r\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                        </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                        <h5>Map of our Location</h5>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                            <a role=\"button\" className=\"btn btn-info\" href=\"/#\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Send us your Feedback</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-9\">\r\n                        <Form model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\r\n                                        placeholder=\"First Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }} />\r\n                                        <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".firstname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required ',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\r\n                                        placeholder=\"Last Name\"\r\n                                        className=\"form-control\" \r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".lastname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required ',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\r\n                                        placeholder=\"Tel. Number\"\r\n                                        className=\"form-control\" \r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15), isNumber\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".telnum\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required ',\r\n                                            minLength: 'Must be greater than 2 numbers',\r\n                                            maxLength: 'Must be 15 numbers or less',\r\n                                            isNumber: 'Must be a number'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                                        placeholder=\"Email\"\r\n                                        className=\"form-control\" \r\n                                        validators={{\r\n                                            required, validEmail\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".email\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required ',\r\n                                            validEmail: 'Invalid Email Address'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{ size: 6, offset: 2 }}>\r\n                                    <div className=\"form-check\">\r\n                                        <Label check>\r\n                                            <Control.checkbox model=\".agree\"\r\n                                                name=\"agree\"\r\n                                                className=\"form-check-input\" /> {' '}\r\n                                            <strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={{ size: 3, offset: 1 }}>\r\n                                    <Control.select model=\"contactType\" name=\"contactType\"\r\n                                        className=\"form-control\">\r\n                                        <option>Tel.</option>\r\n                                        <option>Email</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\"\r\n                                        rows=\"12\"\r\n                                        className=\"form-control\"></Control.textarea>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{ size: 10, offset: 2 }}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                        Send Feedback\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Contact;","D:\\Document\\Study\\full stack\\confusion\\src\\shared\\comments.js",[],["115","116"],"D:\\Document\\Study\\full stack\\confusion\\src\\shared\\promotions.js",[],"D:\\Document\\Study\\full stack\\confusion\\src\\shared\\leaders.js",[],"D:\\Document\\Study\\full stack\\confusion\\src\\components\\AboutUsComponent.js",[],"D:\\Document\\Study\\full stack\\confusion\\src\\redux\\configureStore.js",[],"D:\\Document\\Study\\full stack\\confusion\\src\\redux\\comments.js",[],"D:\\Document\\Study\\full stack\\confusion\\src\\redux\\dishes.js",[],"D:\\Document\\Study\\full stack\\confusion\\src\\redux\\promotions.js",[],"D:\\Document\\Study\\full stack\\confusion\\src\\redux\\leaders.js",[],"D:\\Document\\Study\\full stack\\confusion\\src\\redux\\ActionCreators.js",[],"D:\\Document\\Study\\full stack\\confusion\\src\\redux\\ActionTypes.js",[],"D:\\Document\\Study\\full stack\\confusion\\src\\components\\LoadingComponent.js",[],"D:\\Document\\Study\\full stack\\confusion\\src\\redux\\forms.js",[],{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","severity":1,"message":"122","line":121,"column":37,"nodeType":"123","endLine":122,"endColumn":66},{"ruleId":"121","severity":1,"message":"124","line":134,"column":37,"nodeType":"123","endLine":140,"endColumn":39},{"ruleId":"121","severity":1,"message":"125","line":156,"column":37,"nodeType":"123","endLine":158,"endColumn":68},{"ruleId":"126","severity":1,"message":"127","line":3,"column":33,"nodeType":"128","messageId":"129","endLine":3,"endColumn":40},{"ruleId":"121","severity":1,"message":"124","line":79,"column":37,"nodeType":"123","endLine":84,"endColumn":46},{"ruleId":"121","severity":1,"message":"124","line":100,"column":37,"nodeType":"123","endLine":106,"endColumn":44},{"ruleId":"121","severity":1,"message":"124","line":122,"column":37,"nodeType":"123","endLine":128,"endColumn":44},{"ruleId":"121","severity":1,"message":"124","line":145,"column":37,"nodeType":"123","endLine":151,"endColumn":44},{"ruleId":"121","severity":1,"message":"130","line":167,"column":45,"nodeType":"123","endLine":169,"endColumn":80},{"ruleId":"121","severity":1,"message":"122","line":175,"column":37,"nodeType":"123","endLine":176,"endColumn":66},{"ruleId":"121","severity":1,"message":"125","line":185,"column":37,"nodeType":"123","endLine":187,"endColumn":66},{"ruleId":"117","replacedBy":"131"},{"ruleId":"119","replacedBy":"132"},"no-native-reassign",["133"],"no-negated-in-lhs",["134"],"react/jsx-pascal-case","Imported JSX component select must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE","no-unused-vars","'actions' is defined but never used.","Identifier","unusedVar","Imported JSX component checkbox must be in PascalCase or SCREAMING_SNAKE_CASE",["133"],["134"],"no-global-assign","no-unsafe-negation"]